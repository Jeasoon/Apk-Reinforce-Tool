compileJava {
    dependsOn ":ReinforceTool:assembleTool"
    doLast {
        def dstFile = file("$projectDir.absolutePath/src/main/resources/tool/ApkReinforceTool.jar")
        def dstParentFile = dstFile.parentFile
        if (dstFile.exists()) {
            dstFile.delete()
        } else if (!dstParentFile.exists()) {
            dstParentFile.mkdirs()
        }
        def reinforceToolProject = project(":ReinforceTool")
        copy {
            from "${reinforceToolProject.projectDir.absolutePath}/build/libs/$reinforceToolProject.name-${project.version}.jar"
            into dstParentFile.absolutePath
            rename "$reinforceToolProject.name-${project.version}.jar", "ApkReinforceTool.jar"
        }
    }
}

clean.doLast {
    file("${projectDir.absolutePath}/src/main/resources/tool/ApkReinforceTool.jar").delete()
    file("${projectDir.absolutePath}/tool/buildExe/ApkReinforceTool.jar").delete()
}

jar {
    manifest {
        attributes 'Main-Class': 'org.jeson.reinforce.app.Main'
    }
    doLast {
        copy {
            from "${projectDir.absolutePath}/build/libs/$project.name-${project.version}.jar"
            into "$projectDir.absolutePath/tool/buildExe"
            rename "$project.name-${project.version}.jar", "ApkReinforceTool.jar"
        }
    }
}

task assembleApp(dependsOn: "assemble", group: "build") {
    doLast {
        println "assemble app success"
    }
}